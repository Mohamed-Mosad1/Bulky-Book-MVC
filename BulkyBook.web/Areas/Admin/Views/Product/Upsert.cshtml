@model ProductVM

@inject IUnitOfWork _unitOfWork

@{
    var categories = new SelectList(await _unitOfWork.Repository<Category>().GetAllAsync(), nameof(Category.Id), nameof(Category.Name));
}

<div class="card shadow border-0 my-4">
    <div class="card-header bg-secondary bg-gradient ml-0 py-3">
        <div class="row">
            <div class="col-12 text-center">
                <h2 class="text-white py-2">@ViewData["ActionName"] Product</h2>
            </div>
        </div>
    </div>

    <div class="card-body p-4">
        <form method="post" class="row" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="border p-3">
                <div class="form-floating my-3">
                    <input asp-for="Title" class="form-control border-0 shadow" />
                    <label asp-for="Title" class="ms-2"></label>
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>
                <div class="form-floating">
                    <textarea asp-for="Description" class="form-control border-0 shadow"></textarea>
                    <label asp-for="Description" class="ms-2"></label>
                    <span asp-validation-for="Description" class="text-danger my-3"></span>
                </div>
                <div class="form-floating my-3">
                    <input asp-for="ISBN" class="form-control border-0 shadow" />
                    <label asp-for="ISBN" class="ms-2"></label>
                    <span asp-validation-for="ISBN" class="text-danger my-3"></span>
                </div>
                <div class="form-floating">
                    <input asp-for="Author" class="form-control border-0 shadow" />
                    <label asp-for="Author" class="ms-2"></label>
                    <span asp-validation-for="Author" class="text-danger my-3"></span>
                </div>
                <div class="form-floating my-3">
                    <input asp-for="ListPrice" class="form-control border-0 shadow" />
                    <label asp-for="ListPrice" class="ms-2"></label>
                    <span asp-validation-for="ListPrice" class="text-danger my-3"></span>
                </div>
                <div class="form-floating">
                    <input asp-for="Price" class="form-control border-0 shadow" />
                    <label asp-for="Price" class="ms-2"></label>
                    <span asp-validation-for="Price" class="text-danger my-3"></span>
                </div>
                <div class="form-floating my-3">
                    <input asp-for="Price50" class="form-control border-0 shadow" />
                    <label asp-for="Price50" class="ms-2"></label>
                    <span asp-validation-for="Price50" class="text-danger my-3"></span>
                </div>
                <div class="form-floating">
                    <input asp-for="Price100" class="form-control border-0 shadow" />
                    <label asp-for="Price100" class="ms-2"></label>
                    <span asp-validation-for="Price100" class="text-danger my-3"></span>
                </div>
                <div class="form-floating my-3">
                    <select asp-for="CategoryId" asp-items="@categories" class="form-select border-0 shadow">
                        <option value="">-- Select Category --</option>
                    </select>
                    <label asp-for="CategoryId" class="ms-2"></label>
                    <span asp-validation-for="CategoryId" class="text-danger my-3"></span>
                </div>
                <div class="form-floating py-1">
                    <input type="file" id="fileUpload" name="files" class="form-control border-0 shadow" multiple />
                    <label asp-for="ProductImages" class="ms-2"></label>
                    <span id="fileUploadError" class="text-danger my-3"></span>
                </div>

                @if (Model?.ProductImages is not null && Model.ProductImages.Any())
                {
                    <div class="my-3">
                        <label>Existing Images:</label>
                        <div class="row">
                            @foreach (var image in Model.ProductImages)
                            {
                                <div class="col-12 col-sm-6 col-md-3 col-lg-2 py-2">
                                    <img src="@image.ImageUrl" alt="Product Image" class="img-thumbnail object-fit-cover w-100" style="height: 120px" />
                                    <button type="submit" asp-controller="Product" asp-action="DeleteImage" asp-route-id="@image.Id" class="btn btn-danger btn-sm mt-2 w-100">Remove</button>
                                </div>
                            }
                        </div>
                    </div>
                }

                <div class="row pt-2">
                    <div class="col-12 col-sm-6 col-md-3">
                        <button type="submit" class="btn btn-primary form-control">@(Model?.Id > 0 ? "Update" : "Create")</button>
                    </div>
                    <div class="col-12 col-sm-6 col-md-3">
                        <a asp-controller="Product" asp-action="Index" class="btn btn-outline-primary border form-control">
                            Back to List
                        </a>
                    </div>
                </div>

            </div>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        document.getElementById('fileUpload').addEventListener('change', function () {
            var files = this.files;
            var errorContainer = document.getElementById('fileUploadError');
            var permittedExtensions = ['.jpg', '.jpeg', '.png'];
            var maxSize = 5242880; // 5 MB in bytes
            var isValid = true;
            var errorMessage = '';

            for (var i = 0; i < files.length; i++) {
                var file = files[i];
                var fileExtension = file.name.split('.').pop().toLowerCase();

                if (!permittedExtensions.includes('.' + fileExtension)) {
                    isValid = false;
                    errorMessage = 'Invalid file type. Only JPG, JPEG, and PNG are allowed.';
                    break;
                }

                if (file.size > maxSize) {
                    isValid = false;
                    errorMessage = 'File size must be less than 10 MB.';
                    break;
                }
            }

            if (!isValid) {
                errorContainer.textContent = errorMessage;
                errorContainer.style.display = 'block';
                this.value = ''; // Clear the file input
            } else {
                errorContainer.textContent = '';
                errorContainer.style.display = 'none';
            }
        });
    </script>
}